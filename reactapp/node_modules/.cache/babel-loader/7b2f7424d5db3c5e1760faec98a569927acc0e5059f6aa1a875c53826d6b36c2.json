{"ast":null,"code":"var _jsxFileName = \"/Users/krishnakumar/Desktop/FMA/reactapp/src/components/ForgotPassword.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./ForgotPassword.css\"; // create styling as needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ForgotPassword() {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(\"\");\n    setSuccess(\"\");\n    if (!email || !newPassword) {\n      setError(\"Please fill in all fields\");\n      return;\n    }\n    const passwordRegex = /^(?=.*[A-Z])(?=.*\\d).+$/;\n    if (!passwordRegex.test(newPassword)) {\n      setError(\"Password must contain at least one uppercase letter and one number\");\n      return;\n    }\n    try {\n      const res = await fetch(\"http://localhost:5001/auth/forgot-password\", {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          newPassword\n        })\n      });\n      const data = await res.json();\n      if (res.ok) {\n        setSuccess(data.message || \"Password reset successful!\");\n        setTimeout(() => navigate(\"/login\"), 2000);\n      } else {\n        setError(data.message || \"Failed to reset password\");\n      }\n    } catch (err) {\n      setError(\"Something went wrong. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forgot-password-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"success\",\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"forgot-password-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true,\n        placeholder: \"Enter your email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"New Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: newPassword,\n        onChange: e => setNewPassword(e.target.value),\n        required: true,\n        placeholder: \"Enter new password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(ForgotPassword, \"4Q0ebWxuvXOJ/4i1+Tzzn5OMTOk=\", false, function () {\n  return [useNavigate];\n});\n_c = ForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","ForgotPassword","_s","email","setEmail","newPassword","setNewPassword","error","setError","success","setSuccess","navigate","handleSubmit","e","preventDefault","passwordRegex","test","res","fetch","method","headers","body","JSON","stringify","data","json","ok","message","setTimeout","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","placeholder","_c","$RefreshReg$"],"sources":["/Users/krishnakumar/Desktop/FMA/reactapp/src/components/ForgotPassword.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./ForgotPassword.css\"; // create styling as needed\n\nexport default function ForgotPassword() {\n  const [email, setEmail] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError(\"\");\n    setSuccess(\"\");\n  \n    if (!email || !newPassword) {\n      setError(\"Please fill in all fields\");\n      return;\n    }\n  \n    const passwordRegex = /^(?=.*[A-Z])(?=.*\\d).+$/;\n    if (!passwordRegex.test(newPassword)) {\n      setError(\"Password must contain at least one uppercase letter and one number\");\n      return;\n    }\n  \n    try {\n      const res = await fetch(\"http://localhost:5001/auth/forgot-password\", {\n        method: \"PUT\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ email, newPassword }),\n      });\n      const data = await res.json();\n      if (res.ok) {\n        setSuccess(data.message || \"Password reset successful!\");\n        setTimeout(() => navigate(\"/login\"), 2000);\n      } else {\n        setError(data.message || \"Failed to reset password\");\n      }\n    } catch (err) {\n      setError(\"Something went wrong. Please try again.\");\n    }\n  };\n  \n  return (\n    <div className=\"forgot-password-page\">\n      <h2>Reset Password</h2>\n      {error && <p className=\"error\">{error}</p>}\n      {success && <p className=\"success\">{success}</p>}\n\n      <form onSubmit={handleSubmit} className=\"forgot-password-form\">\n        <label>Email:</label>\n        <input\n          type=\"email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          required\n          placeholder=\"Enter your email\"\n        />\n\n        <label>New Password:</label>\n        <input\n          type=\"password\"\n          value={newPassword}\n          onChange={(e) => setNewPassword(e.target.value)}\n          required\n          placeholder=\"Enter new password\"\n        />\n\n        <button type=\"submit\">Reset Password</button>\n      </form>\n    </div>\n    \n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}