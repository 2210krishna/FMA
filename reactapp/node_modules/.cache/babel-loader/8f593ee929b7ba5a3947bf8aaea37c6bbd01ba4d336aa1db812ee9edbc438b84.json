{"ast":null,"code":"var _jsxFileName = \"/Users/krishnakumar/Desktop/FMA/reactapp/src/components/EvaluatorTable.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import './EvaluatorTable.css';\n\n// export default function EvaluatorTable() {\n//   const [evaluators, setEvaluators] = useState([]);\n\n//   const fetchEvaluators = () => {\n//     fetch(\"http://localhost:5001/evaluator/pending\")\n//       .then((res) => res.json())\n//       .then((data) => setEvaluators(data))\n//       .catch((err) => console.error(err));\n//   };\n\n//   useEffect(() => {\n//     fetchEvaluators();\n//   }, []);\n\n//   const handleApprove = async (id) => {\n//     try {\n//       await fetch(`http://localhost:5001/evaluator/evaluate/${id}`, { method: \"PUT\" });\n//       fetchEvaluators();\n//       alert(\"Application approved!\");\n//     } catch (err) {\n//       console.error(err);\n//     }\n//   };\n\n//   const handleReject = async (id) => {\n//     const reason = prompt(\"Enter rejection reason:\");\n//     if (!reason) return; // cancel if user didn't enter\n\n//     try {\n//       await fetch(`http://localhost:5001/evaluator/reject/${id}`, {\n//         method: \"PUT\",\n//         headers: { \"Content-Type\": \"application/json\" },\n//         body: JSON.stringify(reason),\n//       });\n//       fetchEvaluators();\n//       alert(\"Application rejected!\");\n//     } catch (err) {\n//       console.error(err);\n//     }\n//   };\n\n//   return (\n//     <div className=\"evaluator-container\">\n//       <h2>Evaluator Table - Pending Applications</h2>\n//       <table border=\"1\" cellPadding=\"8\">\n//         <thead>\n//           <tr>\n//             <th>ID</th>\n//             <th>Name</th>\n//             <th>Email</th>\n//             <th>Spices</th>\n//             <th>Experience</th>\n//             <th>Store Location</th>\n//             <th>Phone</th>\n//             <th>Status</th>\n//             <th>Action</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {evaluators.map((e) => (\n//             <tr key={e.id}>\n//               <td>{e.id}</td>\n//               <td>{e.name}</td>\n//               <td>{e.email}</td>\n//               <td>{e.spices}</td>\n//               <td>{e.experience}</td>\n//               <td>{e.storeLocation}</td>\n//               <td>{e.phoneNumber}</td>\n//               <td>{e.status}</td>\n//               <td>\n//                 <button onClick={() => handleApprove(e.id)}>Approve</button>\n//                 <button onClick={() => handleReject(e.id)}>Reject</button>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// }\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EvaluatorTable() {\n  _s();\n  const [applications, setApplications] = useState([]);\n  const email = localStorage.getItem(\"email\");\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const empRes = await fetch(`http://localhost:5001/employees/byEmail/${email}`);\n        const employee = await empRes.json();\n        const empLocation = employee.location;\n        const res = await fetch(\"http://localhost:5001/applications\");\n        const data = await res.json();\n        setApplications(data.filter(a => a.location === empLocation));\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    fetchData();\n  }, [email]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Evaluator Applications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Spices\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Experience\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: applications.map(a => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: a.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: a.spices\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: a.experience\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: a.location\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: a.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: a.phoneNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this)]\n        }, a.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n}\n_s(EvaluatorTable, \"/nbs5sQL2UzqDwq/om4lghfycVI=\");\n_c = EvaluatorTable;\nvar _c;\n$RefreshReg$(_c, \"EvaluatorTable\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","EvaluatorTable","_s","applications","setApplications","email","localStorage","getItem","fetchData","empRes","fetch","employee","json","empLocation","location","res","data","filter","a","err","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","border","map","name","spices","experience","phoneNumber","id","_c","$RefreshReg$"],"sources":["/Users/krishnakumar/Desktop/FMA/reactapp/src/components/EvaluatorTable.jsx"],"sourcesContent":["\n// import React, { useEffect, useState } from \"react\";\n// import './EvaluatorTable.css';\n\n// export default function EvaluatorTable() {\n//   const [evaluators, setEvaluators] = useState([]);\n\n//   const fetchEvaluators = () => {\n//     fetch(\"http://localhost:5001/evaluator/pending\")\n//       .then((res) => res.json())\n//       .then((data) => setEvaluators(data))\n//       .catch((err) => console.error(err));\n//   };\n\n//   useEffect(() => {\n//     fetchEvaluators();\n//   }, []);\n\n//   const handleApprove = async (id) => {\n//     try {\n//       await fetch(`http://localhost:5001/evaluator/evaluate/${id}`, { method: \"PUT\" });\n//       fetchEvaluators();\n//       alert(\"Application approved!\");\n//     } catch (err) {\n//       console.error(err);\n//     }\n//   };\n\n//   const handleReject = async (id) => {\n//     const reason = prompt(\"Enter rejection reason:\");\n//     if (!reason) return; // cancel if user didn't enter\n\n//     try {\n//       await fetch(`http://localhost:5001/evaluator/reject/${id}`, {\n//         method: \"PUT\",\n//         headers: { \"Content-Type\": \"application/json\" },\n//         body: JSON.stringify(reason),\n//       });\n//       fetchEvaluators();\n//       alert(\"Application rejected!\");\n//     } catch (err) {\n//       console.error(err);\n//     }\n//   };\n\n//   return (\n//     <div className=\"evaluator-container\">\n//       <h2>Evaluator Table - Pending Applications</h2>\n//       <table border=\"1\" cellPadding=\"8\">\n//         <thead>\n//           <tr>\n//             <th>ID</th>\n//             <th>Name</th>\n//             <th>Email</th>\n//             <th>Spices</th>\n//             <th>Experience</th>\n//             <th>Store Location</th>\n//             <th>Phone</th>\n//             <th>Status</th>\n//             <th>Action</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {evaluators.map((e) => (\n//             <tr key={e.id}>\n//               <td>{e.id}</td>\n//               <td>{e.name}</td>\n//               <td>{e.email}</td>\n//               <td>{e.spices}</td>\n//               <td>{e.experience}</td>\n//               <td>{e.storeLocation}</td>\n//               <td>{e.phoneNumber}</td>\n//               <td>{e.status}</td>\n//               <td>\n//                 <button onClick={() => handleApprove(e.id)}>Approve</button>\n//                 <button onClick={() => handleReject(e.id)}>Reject</button>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// }\nimport React, { useEffect, useState } from \"react\";\n\nexport default function EvaluatorTable() {\n  const [applications, setApplications] = useState([]);\n  const email = localStorage.getItem(\"email\");\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const empRes = await fetch(`http://localhost:5001/employees/byEmail/${email}`);\n        const employee = await empRes.json();\n        const empLocation = employee.location;\n\n        const res = await fetch(\"http://localhost:5001/applications\");\n        const data = await res.json();\n\n        setApplications(data.filter((a) => a.location === empLocation));\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    fetchData();\n  }, [email]);\n\n  return (\n    <div>\n      <h2>Evaluator Applications</h2>\n      <table border=\"1\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Spices</th>\n            <th>Experience</th>\n            <th>Location</th>\n            <th>Email</th>\n            <th>Phone</th>\n          </tr>\n        </thead>\n        <tbody>\n          {applications.map((a) => (\n            <tr key={a.id}>\n              <td>{a.name}</td>\n              <td>{a.spices}</td>\n              <td>{a.experience}</td>\n              <td>{a.location}</td>\n              <td>{a.email}</td>\n              <td>{a.phoneNumber}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}