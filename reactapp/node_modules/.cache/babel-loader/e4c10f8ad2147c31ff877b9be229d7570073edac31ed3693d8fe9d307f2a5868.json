{"ast":null,"code":"var _jsxFileName = \"/Users/krishnakumar/Desktop/FMA/reactapp/src/components/AdminOrders.jsx\",\n  _s = $RefreshSig$();\n// // import React, { useEffect, useState } from \"react\";\n// // import './AdminOrders.css';\n\n// // export default function AdminOrders() {\n// //   const [orders, setOrders] = useState([]);\n\n// //   // Fetch all orders\n// //   const fetchOrders = () => {\n// //     fetch(\"http://localhost:5001/orders/all\")\n// //       .then((res) => res.json())\n// //       .then((data) => setOrders(data))\n// //       .catch((err) => console.error(err));\n// //   };\n\n// //   useEffect(() => {\n// //     fetchOrders();\n// //   }, []);\n\n// //   // Update status to FINISHED\n// //   const updateStatus = (id) => {\n// //     fetch(`http://localhost:5001/orders/update-status/${id}?status=FINISHED`, {\n// //       method: \"PUT\",\n// //     })\n// //       .then(() => fetchOrders())\n// //       .catch((err) => console.error(err));\n// //   };\n\n// //   return (\n// //     <div className=\"p-4\">\n// //       <h2>All Orders</h2>\n// //       {orders.length > 0 ? (\n// //         <table border=\"1\" cellPadding=\"8\">\n// //           <thead>\n// //             <tr>\n// //               <th>Vendor Email</th>\n// //               <th>Spice</th>\n// //               <th>Quantity</th>\n// //               <th>Status</th>\n// //               <th>Update</th>\n// //             </tr>\n// //           </thead>\n// //           <tbody>\n// //             {orders.map((order) => (\n// //               <tr key={order.id}>\n// //                 <td>{order.vendorEmail}</td>\n// //                 <td>{order.spiceName}</td>\n// //                 <td>{order.quantity}</td>\n// //                 <td>{order.status}</td>\n// //                 <td>\n// //                   {order.status !== \"FINISHED\" && (\n// //                     <button onClick={() => updateStatus(order.id)}>\n// //                       Mark as Finished\n// //                     </button>\n// //                   )}\n// //                 </td>\n// //               </tr>\n// //             ))}\n// //           </tbody>\n// //         </table>\n// //       ) : (\n// //         <p>No orders available.</p>\n// //       )}\n// //     </div>\n// //   );\n// // }\n// import React, { useEffect, useState } from \"react\";\n// import './AdminOrders.css';\n\n// export default function AdminOrders() {\n//   const [orders, setOrders] = useState([]);\n\n//   // Fetch all orders\n//   const fetchOrders = () => {\n//     fetch(\"http://localhost:5001/orders/all\")\n//       .then((res) => res.json())\n//       .then((data) => setOrders(data))\n//       .catch((err) => console.error(err));\n//   };\n\n//   useEffect(() => {\n//     fetchOrders();\n//   }, []);\n\n//   // Update status to FINISHED\n//   const updateStatus = (id) => {\n//     fetch(`http://localhost:5001/orders/update-status/${id}?status=FINISHED`, {\n//       method: \"PUT\",\n//     })\n//       .then(() => fetchOrders())\n//       .catch((err) => console.error(err));\n//   };\n\n//   return (\n//     <div className=\"admin-orders-container\">\n//       <h2>All Orders</h2>\n//       {orders.length > 0 ? (\n//         <table>\n//           <thead>\n//             <tr>\n//               <th>Vendor Email</th>\n//               <th>Spice</th>\n//               <th>Quantity</th>\n//               <th>Status</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {orders.map((order) => (\n//               <tr key={order.id}>\n//                 <td data-label=\"Vendor Email\">{order.vendorEmail}</td>\n//                 <td data-label=\"Spice\">{order.spiceName}</td>\n//                 <td data-label=\"Quantity\">{order.quantity}</td>\n//                 <td data-label=\"Status\">\n//                   {order.status === \"FINISHED\" ? (\n//                     <span className=\"status-finished\">âœ” Finished</span>\n//                   ) : (\n//                     <button onClick={() => updateStatus(order.id)}>\n//                       Mark as Finished\n//                     </button>\n//                   )}\n//                 </td>\n//               </tr>\n//             ))}\n//           </tbody>\n//         </table>\n//       ) : (\n//         <p>No orders available.</p>\n//       )}\n//     </div>\n//   );\n// }\nimport React, { useEffect, useState } from \"react\";\nimport \"./AdminOrders.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AdminOrders() {\n  _s();\n  const [orders, setOrders] = useState([]);\n\n  // Fetch all orders\n  const fetchOrders = () => {\n    fetch(\"http://localhost:5001/orders/all\").then(res => res.json()).then(data => setOrders(data)).catch(err => console.error(err));\n  };\n  useEffect(() => {\n    fetchOrders();\n  }, []);\n\n  // Update status to FINISHED\n  const updateStatus = id => {\n    fetch(`http://localhost:5001/orders/update-status/${id}?status=FINISHED`, {\n      method: \"PUT\"\n    }).then(() => fetchOrders()).catch(err => console.error(err));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-orders-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"All Orders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), orders.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Vendor Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Spices\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: orders.map(order => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            \"data-label\": \"Vendor Email\",\n            children: order.vendorEmail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            \"data-label\": \"Spices\",\n            children: order.spiceNames.join(\", \")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            \"data-label\": \"Quantity\",\n            children: order.quantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            \"data-label\": \"Status\",\n            children: order.status === \"FINISHED\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"status-finished\",\n              children: \"\\u2714 Finished\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => updateStatus(order.id),\n              children: \"Mark as Finished\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 17\n          }, this)]\n        }, order.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No orders available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminOrders, \"FvMuVccH6DXI6fqfhJiN/VsjZaw=\");\n_c = AdminOrders;\nvar _c;\n$RefreshReg$(_c, \"AdminOrders\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","AdminOrders","_s","orders","setOrders","fetchOrders","fetch","then","res","json","data","catch","err","console","error","updateStatus","id","method","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","order","vendorEmail","spiceNames","join","quantity","status","onClick","_c","$RefreshReg$"],"sources":["/Users/krishnakumar/Desktop/FMA/reactapp/src/components/AdminOrders.jsx"],"sourcesContent":["// // import React, { useEffect, useState } from \"react\";\n// // import './AdminOrders.css';\n\n// // export default function AdminOrders() {\n// //   const [orders, setOrders] = useState([]);\n\n// //   // Fetch all orders\n// //   const fetchOrders = () => {\n// //     fetch(\"http://localhost:5001/orders/all\")\n// //       .then((res) => res.json())\n// //       .then((data) => setOrders(data))\n// //       .catch((err) => console.error(err));\n// //   };\n\n// //   useEffect(() => {\n// //     fetchOrders();\n// //   }, []);\n\n// //   // Update status to FINISHED\n// //   const updateStatus = (id) => {\n// //     fetch(`http://localhost:5001/orders/update-status/${id}?status=FINISHED`, {\n// //       method: \"PUT\",\n// //     })\n// //       .then(() => fetchOrders())\n// //       .catch((err) => console.error(err));\n// //   };\n\n// //   return (\n// //     <div className=\"p-4\">\n// //       <h2>All Orders</h2>\n// //       {orders.length > 0 ? (\n// //         <table border=\"1\" cellPadding=\"8\">\n// //           <thead>\n// //             <tr>\n// //               <th>Vendor Email</th>\n// //               <th>Spice</th>\n// //               <th>Quantity</th>\n// //               <th>Status</th>\n// //               <th>Update</th>\n// //             </tr>\n// //           </thead>\n// //           <tbody>\n// //             {orders.map((order) => (\n// //               <tr key={order.id}>\n// //                 <td>{order.vendorEmail}</td>\n// //                 <td>{order.spiceName}</td>\n// //                 <td>{order.quantity}</td>\n// //                 <td>{order.status}</td>\n// //                 <td>\n// //                   {order.status !== \"FINISHED\" && (\n// //                     <button onClick={() => updateStatus(order.id)}>\n// //                       Mark as Finished\n// //                     </button>\n// //                   )}\n// //                 </td>\n// //               </tr>\n// //             ))}\n// //           </tbody>\n// //         </table>\n// //       ) : (\n// //         <p>No orders available.</p>\n// //       )}\n// //     </div>\n// //   );\n// // }\n// import React, { useEffect, useState } from \"react\";\n// import './AdminOrders.css';\n\n// export default function AdminOrders() {\n//   const [orders, setOrders] = useState([]);\n\n//   // Fetch all orders\n//   const fetchOrders = () => {\n//     fetch(\"http://localhost:5001/orders/all\")\n//       .then((res) => res.json())\n//       .then((data) => setOrders(data))\n//       .catch((err) => console.error(err));\n//   };\n\n//   useEffect(() => {\n//     fetchOrders();\n//   }, []);\n\n//   // Update status to FINISHED\n//   const updateStatus = (id) => {\n//     fetch(`http://localhost:5001/orders/update-status/${id}?status=FINISHED`, {\n//       method: \"PUT\",\n//     })\n//       .then(() => fetchOrders())\n//       .catch((err) => console.error(err));\n//   };\n\n//   return (\n//     <div className=\"admin-orders-container\">\n//       <h2>All Orders</h2>\n//       {orders.length > 0 ? (\n//         <table>\n//           <thead>\n//             <tr>\n//               <th>Vendor Email</th>\n//               <th>Spice</th>\n//               <th>Quantity</th>\n//               <th>Status</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {orders.map((order) => (\n//               <tr key={order.id}>\n//                 <td data-label=\"Vendor Email\">{order.vendorEmail}</td>\n//                 <td data-label=\"Spice\">{order.spiceName}</td>\n//                 <td data-label=\"Quantity\">{order.quantity}</td>\n//                 <td data-label=\"Status\">\n//                   {order.status === \"FINISHED\" ? (\n//                     <span className=\"status-finished\">âœ” Finished</span>\n//                   ) : (\n//                     <button onClick={() => updateStatus(order.id)}>\n//                       Mark as Finished\n//                     </button>\n//                   )}\n//                 </td>\n//               </tr>\n//             ))}\n//           </tbody>\n//         </table>\n//       ) : (\n//         <p>No orders available.</p>\n//       )}\n//     </div>\n//   );\n// }\nimport React, { useEffect, useState } from \"react\";\nimport \"./AdminOrders.css\";\n\nexport default function AdminOrders() {\n  const [orders, setOrders] = useState([]);\n\n  // Fetch all orders\n  const fetchOrders = () => {\n    fetch(\"http://localhost:5001/orders/all\")\n      .then((res) => res.json())\n      .then((data) => setOrders(data))\n      .catch((err) => console.error(err));\n  };\n\n  useEffect(() => {\n    fetchOrders();\n  }, []);\n\n  // Update status to FINISHED\n  const updateStatus = (id) => {\n    fetch(`http://localhost:5001/orders/update-status/${id}?status=FINISHED`, {\n      method: \"PUT\",\n    })\n      .then(() => fetchOrders())\n      .catch((err) => console.error(err));\n  };\n\n  return (\n    <div className=\"admin-orders-container\">\n      <h2>All Orders</h2>\n      {orders.length > 0 ? (\n        <table>\n          <thead>\n            <tr>\n              <th>Vendor Email</th>\n              <th>Spices</th>\n              <th>Quantity</th>\n              <th>Status</th>\n            </tr>\n          </thead>\n          <tbody>\n            {orders.map((order) => (\n              <tr key={order.id}>\n                <td data-label=\"Vendor Email\">{order.vendorEmail}</td>\n                {/* Join spiceNames list into a comma-separated string */}\n                <td data-label=\"Spices\">{order.spiceNames.join(\", \")}</td>\n                <td data-label=\"Quantity\">{order.quantity}</td>\n                <td data-label=\"Status\">\n                  {order.status === \"FINISHED\" ? (\n                    <span className=\"status-finished\">âœ” Finished</span>\n                  ) : (\n                    <button onClick={() => updateStatus(order.id)}>\n                      Mark as Finished\n                    </button>\n                  )}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      ) : (\n        <p>No orders available.</p>\n      )}\n    </div>\n  );\n}\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,eAAe,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACpC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;;EAExC;EACA,MAAMO,WAAW,GAAGA,CAAA,KAAM;IACxBC,KAAK,CAAC,kCAAkC,CAAC,CACtCC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKN,SAAS,CAACM,IAAI,CAAC,CAAC,CAC/BC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CAAC;EACvC,CAAC;EAEDf,SAAS,CAAC,MAAM;IACdQ,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMU,YAAY,GAAIC,EAAE,IAAK;IAC3BV,KAAK,CAAC,8CAA8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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}